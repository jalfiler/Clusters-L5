################################################################################
#                   *** ASteCA input parameters file ***
#                      Created: [2022-08-15 20:33:11]
#
# This file contains the values of the parameters used by ASteCA functions.
# Any empty line or lines that begin with a # character will be ignored.
#
# * DO NOT modify the ID strings in the first column of each line, these are
#   used by the code to identify the parameters in that line.
# * DO NOT write less values than those required in each line or the code
#   will halt.
#
################################################################################



############################## Input data ######################################

# Delimiter used to read the input data file. Supported delimiters are:
# comma, space, semicolon, vertical-bar, tab.
#
#     sep
I0  comma


# Column names for the IDs and coordinates.
#
# * id_star, x, y: [str]
#   IDs and coordinates (in degrees).
# * frame : [equatorial / galactic]
#   Reference frame of the (x, y) coordinates; 'equatorial' assumes (ra, dec),
#   and 'galactic' assumes (lon, lat).
#
#    id_star       ra       dec         frame
#I1   EDR3Name      _x        _y    equatorial
I1      index     ra       dec    equatorial

# Columns for the photometry, parallax, and proper motions.
#
# * system: [str]
#   Photometric system's id. Must match the isochrones' folder name. Different
#   systems can be combined.
# * filterX: [str]
#   Name of the filter as it appears in the isochrone files. For the color
#   line(s) (I3) the filters 'filter1, filter2' must be ordered such that the
#   color is generated as: (filter1 - filter2).
#
# * mag_col, e_mag_col: [str]
#   Column names for the magnitude and its uncertainty.
# * color_col, e_color_col: [str]
#   Column names for the color and its uncertainty. One color is mandatory, and
#   up to two colors are supported for the fundamental parameters block (the
#   other blocks have no limit on the colors). If more than one color is to be
#   used, add a new line starting with the identificator 'I3'.
#
#           system    filter     mag_col      e_mag_col
#I2        gaierdr3      Gmag        Gmag         e_Gmag
I2        sloan_2mass    gmag        gmag         e_g

#           system    filter1    filter2   color_col  e_color_col
#I3        gaierdr3    G_BPmag    G_RPmag       BP-RP      e_BP-RP
I3        sloan_2mass    gmag    rmag       g-r      e_g-r

# * plx, pmRa, pmDE: [str / n]
#   Parallax [mas] and proper motions [mas/yr]. If a data column is not
#   present use 'n'.
#
#    Parallax         |------ Proper motions -------|
#    Plx    e_Plx     pmRA    e_pmRA    pmDE    e_pmDE
I4   n        n         n       n         n       n
################################################################################



####################### Structural functions ###################################

# Structural analysis parameters. Use 'a' for automatic estimation. If no
# values are set for a given cluster, values from the 'CLUSTER' entry will be
# used.
#
# * name         : [str]
#   Cluster's name (must match the name of the input data file)
# * c_x / c_y    : [a / float]
#   Cluster's center coordinates
# * field_dens   : [a / float>0.]
#   Field (background+foreground) density.
#   - a: selects the field density automatically using the per-star local
#        densities
#   - float: manual value in stars/degree^2
# * clust_radius : [a / max / float>0.]
#   Cluster's radius.
#   - a: selects the 'optimal' value (maximizes the ratio between
#     cluster members and stars within rings of increasing radii)
#   - max: uses a radius large enough to include all stars in the frame.
#   - float: manual value in degrees.
# * f_regs       : [a / int>0]
#   Number of field regions to define around the cluster (used by the
#   decontamination algorithm).
#   - a: selects the maximum available
#   - int: manual number of field regions
#
#   name       c_x      c_y      field_dens   clust_radius     f_regs
S0  6453   267.71666       -34.59916    a              a          a

# King profile fitting parameters.
#
# * ndim: [0 / 2 / 4]
#   Number of dimensions to fit: '0' means skip the process (no fit), '2' means
#   fit (rc, rt), '4' means fit (rc, rt, ecc, theta)
# * nchains: [int]
#   Number of MCMC chains used in the Bayesian analysis.
# * nruns: [int]
#   Number of MCMC steps used in the Bayesian analysis.
# * nburn: [0.<float<1.]
#   Percentage of chains to throw away as burn-in.
# * rt_max: [0.<float]
#   Factor that determines the maximum value of the tidal radius, compared to
#   the radius obtained in the previous step.
#
#   ndim   nchains   nruns  nburn    rt_max
S1     2        20    2000    .25         3
################################################################################



####################### Decontamination algorithm ##############################

# Assign membership probabilities (MPs) to stars within the cluster region.
#
# * flag: [y / n / (column name)]
#   - y: apply the Bayesian decontamination algorithm (DA).
#   - n: no DA applied, all stars are assigned MP=1.
#   - column name: read MPs from an existing column in the input file.
# * runs: [integer>=2]
#   The Bayesian DA will iterate a maximum of 'runs' times or until the MPs
#   converge to within 0.1% values. Minimum value is 2.
#  * w_xxx: [y / n]
#   Turn data dimensions used by the DA on/off (y/n). If more than one color
#   is defined, add more values below 'w_col'.
#
#   flag   runs   w_mag   w_col   w_Plx   w_PMx   w_PMy
D0     y   1000       n       n       y       y       y
################################################################################



########################## Field stars removal #################################

# Cluster region field stars removal.
#
# Performs a selection of stars within the cluster region, to be used by the
# synthetic cluster match function. Possible field stars are removed either
# based on their assigned MPs, or randomly (if MPs are missing).
#
# * mode: [local / n_memb / mp_05 / top_h / man / all]
#   - local: combines the assigned MPs with a cell by cell removal of stars in
#     the photometric diagram. The stars discarded are those of lower MPs and
#     the number is equal to the excess of field stars present in each cell.
#   - n_memb: use the N stars with the highest MPs, where N is the approximate
#     number of members found via the cluster region vs field region star
#     density comparison.
#   - mp_05: selects only those stars with MP>=0.5, i.e.: stars with higher
#     probability of being a cluster member than a field star.
#   - top_h: selects the top half of all stars in the cluster region with the
#     highest MPs.
#   - man: the minimum accepted probability value has to be set manually in the
#    'prob_min' parameter (0, 1).
#   - all: use all stars in the cluster region.
# * binning: [optm / fixed / blocks / blocks-max / auto / fd / doane / scott /
#             rice / sqrt / sturges / knuth]
#   Binning method to be used if the 'local' method is selected. Otherwise
#   this parameter is ignored.
#   - optm: select the number of bins so that the number of stars left is
#     as close to the estimated number of members as possible. The number of
#     bins in the magnitude is twice the number used in the colors.
#   - fixed: Based on Bonatto & Bica (2007; 377, 3, 1301-1323) but using larger
#     values: 0.5 mag for colors and 1. mag for the magnitude.
#   - blocks / knuth: astropy's implementation.
#   - blocks-max: same as 'blocks' but imposing a maximum width of 3. mag for
#     colors and 1. mag for magnitude.
#   - rest: numpy's implementation.
# * prob_min: [0<float<1]
#   Minimum accepted probability value if the 'man' mode was selected.
#
#   mode    binning     prob_min
F0  local      optm          0.5
################################################################################



###################### Parallax Bayesian analysis ##############################

#
# * plx_bayes_flag: [y / n]
#   Bayesian analysis of parallax data.
# * offset: [float]
#   Offset added to the parallax data.
# * nchains: [int]
#   Number of MCMC chains used in the Bayesian analysis.
# * nruns: [int]
#   Number of MCMC steps used in the Bayesian analysis.
# * nburn: [0.<float<1.]
#   Percentage of chains to throw away as burn-in.
#
#   plx_flag   offset   nchains   nruns   nburn
P0         y    0.029        10    2000     .25
################################################################################



######################## Synthetic clusters generation #########################

# * ran_seed : [int / n]
#   Random seed used in the generation of synthetic clusters. If 'n', an integer
#   will be randomly selected.
#   ran_seed
R0         n

# * IMF : [str]
#   IMF used to populate the synthetic clusters.
#   - kroupa_2002      : Kroupa (2002) 295.82K, Eq. (2) & (3)
#   - chabrier_2001_exp: Chabrier (2001) 554.1274C, Eq (8)
#   - chabrier_2001_log: Chabrier (2001) 554.1274C, Eq (7)
#   - kroupa_1993      : Kroupa et al. (1993) 262.545K, Eq. (13)
#   - salpeter_1955    : Salpeter (1955)
# * Max_mass : [int]
#   Maximum mass used to sample the selected IMF.
#
#           IMF     Max_mass
R1  kroupa_2002          5e5

# * DR_dist : [normal / uniform]
#   Distribution for the differential reddening parameter (DR). This parameter
#   is added to the E_BV and is assumed to be always positive. Hence, if a
#   'normal' distribution is selected, the DR parameter represents the standard
#   deviation of an absolute valued normal distribution. If 'uniform' is
#   selected then DR represents the maximum DR value that affects the cluster.
# * DR_percentage : [0<float<=1]
#   Percentage of stars that will be (randomly) affected by the differential
#   reddening.
#
#   DR_dist     DR_percentage
R2   normal               0.5

# * Alpha : [0<=float]
#   This parameter is part of the binary probability vs primary mass
#   distribution logarithm-law: P = Alpha + Beta*log10(mass). It can be
#   thought of as the binary system probability for the lowest mass stars.
#   The 'Beta' parameter is fitted (or fixed) below along with the remaining
#   fundamental parameters. The binary fraction is inferred from this
#   distribution. Fixed values of (Alpha=0.3, Beta=0.15) can be used to mimic
#   the distribution presented in Duchêne & Kraus (2013), for M>0.5 solar
#   masses. A value of Alpha=0.275 is better for a general fit to the entire
#   mass range.
# * Gamma : [-1<float / D&K]
#   Shape parameter for the powerlaw distribution that characterizes the
#   binary mass ratio (q=m2/m1). This law is non mass-dependent and is written
#   as: f(q)~q^Gamma. A value of 0 can be used to represent a uniform
#   distribution. The keyword 'D&K' can also be used. It represents the
#   mass-dependent distribution from Duchêne & Kraus (2013), which makes this
#   parameter depend on the primary mass of the binary system.
#
#   Alpha    Gamma
R3    0.3      D&K

# * completeness : [y / n / floats]
#   - y: the completeness correction is estimated automatically
#   - n: no completeness correction is applied
#   - floats: the user can manually input a completeness correction function
#     formatted as pairs of floats:
#     [edge_1, perc_1, edge_2, perc_2, ..., perc_F, edge_F]
#     'perc_X' is a float in the range [0., 1.] that corresponds to the
#     completeness percentage in the magnitude interval (edge_X, edge_X+1).
#     For example the list of floats: 8 1 12 0.9 14.5 0.5 19 0.1 23
#     means that there is 100% completeness in the interval mag=[8, 12],
#     90% completeness in the interval mag=[12, 14.5], ..., up to 1%
#     in the interval mag=[19, 23]. Spaces between floats are important.
#     Any modeled star with 'mag<edge_1' or 'mag>edge_F' will be assigned a 0%
#     completeness (i.e.: removed from the synthetic clusters)
# * Max_mag : [max / float]
#   Maximum magnitude used to analyze the observed cluster.
#
#   Max_mag    completeness
R4      max               y

# * name       : [str]
#   Cluster's name (must match the name of the input data file)
# * z          : [float / str]
#   Metallicity
# * log(age)   : [float / str]
#   Logarithmic age
# * Beta       : [0<float]
#   Shape parameter for the binary probability vs mass distribution.
# * Av       : [0<=float]
#   Visual absorption
#   DR         : [0=<float]
#   Differential reddening.
# * Rv         : [float]
#   Ratio of total to selective absorption.
# * d_m        : [0<float]
#   Distance modulus
#
#   For the [z, log(age)] parameters the strings 'min' and/or 'max' can be used
#   to let ASteCA decide the minimum and/or maximum range limits. A single
#   value can be used to indicate a fixed parameter.
#
#
#      name         z     log(age)     Beta       Av     DR       Rv        d_m
R5  6453   0.0001/0.009  9.0/10.1     0.15     0.0/0.3   0   3.1   16.5/17.5
################################################################################



#################### Best fit algorithm parameters #############################

# Algorithm used to explore the parameter space given a likelihood.
#
# * algorithm: [ptemcee / read / n]
#   - ptemcee: Parallel tempering Bayesian MCMC algorithm.
#   - read   : Read pickle file generated with the 'save_trace' option. The
#              file must exist in the 'input' folder.
#   - n      : No fundamental parameters estimation will be attempted on the
#              observed cluster. All the parameters below are ignored.
# * mins_max: [float]
#   Maximum number of minutes the process is allowed to run.
# * save_trace: [y / n]
#   Save MCMC trace to file?
#
#   algorithm   mins_max  save_trace
B0    ptemcee          5           y

# ptemcee parameters.
#
# * nsteps: [int]
#   Number of steps used.
# * nwalkers: [int]
#   Number of walkers/chains used.
# * nburn: [0<float<1]
#   Percentage of the chain discarded as burn-in.
# * ntemps: [int]
#   Number of parallel temperatures.
# * Tmax: [float / inf / n]
#   Maximum temperature value.
# * adapt: [y / n]
#   Turn on-off the adaptive (dynamic) temperature selection.
#
#   nsteps   nwalkers   nburn   ntemps   Tmax   adapt
B1   10000         20     .25       10     20       y

# Priors
#
# * prior: [u / g]
#   Prior distributions for the fitted parameters.
#   - u: uniform distribution
#   - g: Gaussian distribution
#
# The 'g' option needs the extra parameters 'mean/stddev'. In this case the
# proper format is for example 'g/8/0.2', for a mean value of 8 and a standard
# deviation of 0.2.
#
#      name      z    log(age)    Beta     Av      DR      Rv    d_m
B2  6453      u           u       u      u       u       u      u

# Likelihood.
#
# The likelihood function is the 'Poisson likelihood ratio' defined in
# Tremmel et al. (2013); Eq. 10 (with v_{i,j}=1).
#
# * binning: fixed / manual / blocks / blocks-max / auto / fd / doane / scott /
#            rice / sqrt / sturges / knuth
#   Binning method applied on the photometric space.
#
# * N_bins: [int]
#   Number of bins for each photometric dimension if the 'manual' binning mode
#   is selected. The order is: 'N_bin_mag N_bin_color' (add another
#   'N_bin_color' if two colors are employed).
#
#   binning    N_bins
B3    knuth      5 10
################################################################################



############################## Output ##########################################

# Create output figures?
#
# * blocks: [A1, A2, A3, B1, B2, C1, C2, C3, D1, D2, D3]
#   Select one or more identifier to decide which plots will be produced. Leave
#   empty for no output plots. An 's' character after an identifier will make
#   the code stop and return right after creating that plot. I.e.: the line
#   'A1 B1 s B2 C1' will make the code create the 'A1' and 'B1' plots and stop
#   right after 'B1'. If we use 'A1 B1 B2 C1' then those four plots will be
#   generated and the code will keep running until the end.
#
#   - A1: structural density maps
#   - A2: center and field density analysis
#   - A3: radius analysis
#   - B1: uncertainties analysis
#   - B2: photometric data analysis
#   - C1: decontamination algorithm photometric diagrams
#   - C2: parallax analysis
#   - C3: proper motions analysis
#   - D1: convergence diagnostics
#   - D2: corner plot for the fundamental parameters
#   - D3: best fit synthetic cluster found
#
#   blocks
O0  A1 A2 A3 B1 B2 C1 C2 C3 D1 D2 D3

# * plot_style: [asteca / any style supported by matplotlib]
#   To display a list of supported styles, use:
#   > import matplotlib.pyplot as plt;print(plt.style.available)
#   You can use your own 'matplotlibrc' file storing it in the top folder.
#   Any parameter in that file will overwrite the parameters in the selected
#   style below.
# * D3_sol: [mean / median / mode / map]
#   The solution (isochrone + synthetic cluster) to plot in the D3 image.
#
#   plot_style    D3_sol
O1      asteca    median
################################################################################
